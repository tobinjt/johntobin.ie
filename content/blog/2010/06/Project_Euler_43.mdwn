[Project Euler problem
43:](http://projecteuler.net/index.php?section=problems&id=43)

> The number, 1406357289, is a 0 to 9 pandigital number because it is made up of
> each of the digits 0 to 9 in some order, but it also has a rather interesting
> sub-string divisibility property.
>
> Let d1 be the 1st digit, d2 be the 2nd digit, and so on. In this way, we note
> the following:
>
>     d2d3d4=406 is divisible by 2
>     d3d4d5=063 is divisible by 3
>     d4d5d6=635 is divisible by 5
>     d5d6d7=357 is divisible by 7
>     d6d7d8=572 is divisible by 11
>     d7d8d9=728 is divisible by 13
>     d8d9d10=289 is divisible by 17
> Find the sum of all 0 to 9 pandigital numbers with this property.

Here's my LISP solution:

    (defun project-euler-43-1 ()
      (let ((divisors #(2 3 5 7 11 13 17))
            (results '())
            (elements #(0 1 2 3 4 5 6 7 8 9)))
    
        ; Loop until we run out of permutations
        (do ()
            ((not elements))
          (let ((divisible t))
            ; Loop until one of the pieces is not a multiple of a divisor, or we
            ; run out of divisors.
            (do ((i 0 (1+ i)))
                ((or (not divisible)
                     (= i (array-dimension divisors 0))))
              ; Calculate this piece
              (let ((piece (+ (* (aref elements (+ i 1)) 100)
                              (* (aref elements (+ i 2)) 10)
                                 (aref elements (+ i 3)))))
                ; Is it a multiple of the divisor?
                (setf divisible (zerop (mod piece (aref divisors i))))))
            (when divisible
              (push (digits-to-number elements) results))
            (setf elements (inplace-permute elements #'>))))
        (reduce #'+ results)))

[[!tag LISP Project_Euler programming]]
