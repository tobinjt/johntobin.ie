[Project Euler
problem 32:](http://projecteuler.net/index.php?section=problems&id=32)

> We shall say that an n-digit number is pandigital if it makes use of all the
> digits 1 to n exactly once; for example, the 5-digit number, 15234, is 1
> through 5 pandigital.
>
> The product 7254 is unusual, as the identity, 39 * 186 = 7254, containing
> multiplicand, multiplier, and product is 1 through 9 pandigital.
>
> Find the sum of all products whose multiplicand/multiplier/product identity
> can be written as a 1 through 9 pandigital.
>
> HINT: Some products can be obtained in more than one way so be sure to only
> include it once in your sum.

Here's my LISP solution:

    (defun project-euler-32-1 ()
      (let ((results (make-hash-table)))
        (loop for i from 2 to 9999 do
          (loop for j from 2 to i while (<= (* j i) 99999) do
            (let ((product (* i j)))
              (when (is-pandigital i j product)
                (setf (gethash product results) t)))))
        (let ((sum 0))
          (maphash #'(lambda (key value)
                             (declare (ignore value))
                             (incf sum key))
                   results)
          sum)))
    
    (defun is-pandigital (i j product)
      (let ((digits-found (make-array 10 :initial-element 0)))
        (dolist (a-number (list i j product))
          (do ((digit (mod a-number 10) (mod a-number 10)))
              ((< a-number 1))
            (incf (aref digits-found digit))
            (setf a-number (floor (/ a-number 10)))))
        (let ((result (= 0 (aref digits-found 0))))
          (loop for i from 1 to 9 while result do
            (setf result (= 1 (aref digits-found i))))
          result)))

[[!tag LISP Project_Euler programming]]
