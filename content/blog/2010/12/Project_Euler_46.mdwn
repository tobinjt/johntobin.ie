[Project Euler problem
46:](http://projecteuler.net/index.php?section=problems&id=46)

> It was proposed by Christian Goldbach that every odd composite number can be
> written as the sum of a prime and twice a square.
>
> 9 = 7 + (2 * 1^2)
> 15 = 7 + (2 * 2^2)
> 21 = 3 + (2 * 3^2)
> 25 = 7 + (2 * 3^2)
> 27 = 19 + (2 * 2^2)
> 33 = 31 + (2 * 1^2)
> It turns out that the conjecture was false.
>
> What is the smallest odd composite that cannot be written as the sum of a
> prime and twice a square?

Here's my LISP solution:

    ; primes is an array returned by sieve-of-eratosthenes
    ; doubled-squares is a hash table containing doubled squares
    ; returns t or nil
    (defun is-goldback-number (primes doubled-squares the-number)
      (do ((i 1 (+ 2 i)))
          ((>= i the-number) nil)
        (when (aref primes i)
          (let ((remainder (- the-number i)))
            (when (gethash remainder doubled-squares)
              (return t))))))
    
    ; 1 Generate a large number of primes
    ; 2 Generate a large number of (2 * n^2)
    ; 3 Iterate over non-prime odd numbers, checking if (odd-number - prime) is one
    ;   of the doubled squares; the first one that isn't is the first non-Goldbach
    ;   number.
    (defun project-euler-46-1 ()
      (let ((primes (sieve-of-eratosthenes 100))
            (found-primes-less-than 100)
            (doubled-squares (make-hash-table))
            (seed-for-doubled-squares 0)
            (max-doubled-square 0))
        (do ((n 9 (+ n 2)))
            (nil)
          (do ()
              ((< n max-doubled-square))
            (incf seed-for-doubled-squares)
            (setf max-doubled-square (* 2 (expt seed-for-doubled-squares 2)))
            (setf (gethash max-doubled-square doubled-squares) 1))
          (when (> n found-primes-less-than)
            (setf found-primes-less-than (* 2 found-primes-less-than))
            (setf primes (sieve-of-eratosthenes found-primes-less-than)))
          (when (and (not (aref primes n))
                     (not (is-goldback-number primes doubled-squares n)))
            (format t "~A~%" n)
            (return)))))

[[!tag LISP Project_Euler programming]]
