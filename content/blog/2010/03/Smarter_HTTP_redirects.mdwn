If your website is available under more than one FQDN, [standard SEO
advice](http://www.google.com/search?q=seo+multiple+hostnames) is to pick a
canonical FQDN and redirect the others to it.  You can see that in action on
this website: clicking on
<http://johntobin.ie/blog/2010/03/Smarter_HTTP_redirects> will redirect you to
<https://www.johntobin.ie/blog/2010/03/Smarter_HTTP_redirects/> (and won't
interrupt you reading this article).  The simplest way to do this in Apache is
to configure a VirtualHost for johntobin.ie, and use a single
[RewriteRule](http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html#rewriterule):

    RewriteRule ^(.*)$ https://www.johntobin.ie$1

You can improve this in two easy ways.  Firstly, heed the SEO advice and turn
that temporary redirect (302) into a permanent redirect (301), which browsers
and (more importantly) search engines' crawlers are supposed to cache.

    RewriteRule ^(.*)$ https://www.johntobin.ie$1 [L,R=301]

See <http://en.wikipedia.org/wiki/HTTP_response_codes> for a list of HTTP
response codes.

The second change won't have any SEO benefits, but it will reduce the load on
your web server slightly, and will also slightly speed up your readers' browsing
experience.  You may have noticed that when you click on a URL like
http://www.example.org/directory, your browser will display
http://www.example.org/directory/ (note the trailing */* on the second URL).
When your browser makes a HTTP request for a directory, but the request doesn't
end with a */*,<!-- * --> the web server will redirect your browser to the same
URL with a */* appended.  When you combine that with a redirection from
example.org to www.example.org, your web browser will have to make three
requests:

    http://example.org/directory
    http://www.example.org/directory
    http://www.example.org/directory/

We can eliminate the second request and the second redirection by appending a
*/* whenever a request is missing one.

Here's the Apache config snippet:

    # Add a trailing / if a request for a directory is missing one.
    # This avoids an extra redirection: instead of
    #   http://johntobin.ie/blog -> https://www.johntobin.ie/blog ->
    #   https://www.johntobin.ie/blog/
    # we get
    #   http://johntobin.ie/blog -> https://www.johntobin.ie/blog/
    
    # If the request is for a directory . . .
    RewriteCond %{DOCUMENT_ROOT}/%{REQUEST_URI} -d
    # . . . and the URL doesn't end with a / . . .
    RewriteCond %{REQUEST_URI} !/$
    # append a /, and fall through to the next RewriteRule.
    RewriteRule ^(.*)$ $1/
    # Redirect as before.
    RewriteRule ^(.*)$ https://www.johntobin.ie$1 [L,R=301]

[[!tag sysadmin Apache]]
