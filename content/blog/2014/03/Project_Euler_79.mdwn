[Project Euler problem 79:](http://projecteuler.net/problem=79)

> A common security method used for online banking is to ask the user for three
> random characters from a passcode. For example, if the passcode was 531278,
> they may ask for the 2nd, 3rd, and 5th characters; the expected reply would
> be: 317.
>
> The text file, keylog.txt, contains fifty successful login attempts.
>
> Given that the three characters are always asked for in order, analyse the
> file so as to determine the shortest possible secret passcode of unknown
> length.

My gut reaction on reading the problem description was to approach this as a
graph traversal problem: for every 3 digit number ABC, create edges A-B and B-C
in the graph, then find the shortest path through the graph that touches every
node.  I *could* have written lots of code to do this, but instead I decided to
try using [Graphviz](http://www.graphviz.org/) first.   A few minutes to write a
shell pipeline to transform the input data to an input file for `dot`, then I
was able to read the result from the graph.  Success :)

Here's my shell solution:

    (echo 'digraph keylog {'; \
     cat keylog.txt \
       | sed -e 's/\(.\)\(.\)\(.\)/\1 -> { \2 }!\2 -> { \3 }/' \
       | tr '!' '\n' \
       | sort -u; \
     echo '}' \
    ) > ~/tmp/keylog.dot
    dot -Tsvg -o ~/tmp/keylog.svg ~/tmp/keylog.dot
    # Open ~/tmp/keylog.svg in your browser.

[[!tag shell Project_Euler programming]]
