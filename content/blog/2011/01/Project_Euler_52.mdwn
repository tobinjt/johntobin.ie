[Project Euler problem
52:](http://projecteuler.net/index.php?section=problems&id=52)

> It can be seen that the number, 125874, and its double, 251748, contain
> exactly the same digits, but in a different order.
>
> Find the smallest positive integer, x, such that 2x, 3x, 4x, 5x, and 6x,
> contain the same digits.

Here's my LISP solution:

    (defun project-euler-52-1 ()
      (block found-answer
        ; Only consider numbers between 10^n and ceil((10^(n+1))/6); for any x
        ; outside those ranges, 6x will have an extra digit.
        (do* ((start 10 (* start 10))
              (end (ceiling (/ (* 10 start) 6))
                   (ceiling (/ (* 10 start) 6))))
             (nil)
          (do* ((x start (1+ x))
                (sorted-digits (sort (number-to-digits x) #'<)
                               (sort (number-to-digits x) #'<)))
               ((> x end))
            (block list-of-multipliers
              (dolist (multiplier '(2 3 4 5 6))
                (when (not (equal sorted-digits
                                  (sort (number-to-digits (* x multiplier)) #'<)))
                  (return-from list-of-multipliers nil)))
              (return-from found-answer x))))))

[[!tag LISP Project_Euler programming]]
